/* 
 * BRP historie bevragen
 *
 * API voor het zoeken en raadplegen van historische verblijfplaatsen, partners, nationaliteiten en verblijfstitels uit de BRP (inclusief de RNI).  Zie de [Functionele documentatie](https://github.com/VNG-Realisatie/Haal-Centraal-BRP-historie-bevragen/tree/v1.0.0/features) voor nadere toelichting. 
 *
 * The version of the OpenAPI document: 0.0.1 (develop)
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Threading;
using RestSharp;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IBRPHistorieBevragenApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>NationaliteithistorieHalCollectie</returns>
        NationaliteithistorieHalCollectie Getnationaliteithistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of NationaliteithistorieHalCollectie</returns>
        ApiResponse<NationaliteithistorieHalCollectie> GetnationaliteithistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>PartnerhistorieHalCollectie</returns>
        PartnerhistorieHalCollectie Getpartnerhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of PartnerhistorieHalCollectie</returns>
        ApiResponse<PartnerhistorieHalCollectie> GetpartnerhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfplaatshistorieHalCollectie</returns>
        VerblijfplaatshistorieHalCollectie Getverblijfplaatshistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfplaatshistorieHalCollectie</returns>
        ApiResponse<VerblijfplaatshistorieHalCollectie> GetverblijfplaatshistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfstitelhistorieHalCollectie</returns>
        VerblijfstitelhistorieHalCollectie Getverblijfstitelhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfstitelhistorieHalCollectie</returns>
        ApiResponse<VerblijfstitelhistorieHalCollectie> GetverblijfstitelhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of NationaliteithistorieHalCollectie</returns>
        System.Threading.Tasks.Task<NationaliteithistorieHalCollectie> GetnationaliteithistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (NationaliteithistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<NationaliteithistorieHalCollectie>> GetnationaliteithistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of PartnerhistorieHalCollectie</returns>
        System.Threading.Tasks.Task<PartnerhistorieHalCollectie> GetpartnerhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (PartnerhistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<PartnerhistorieHalCollectie>> GetpartnerhistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VerblijfplaatshistorieHalCollectie</returns>
        System.Threading.Tasks.Task<VerblijfplaatshistorieHalCollectie> GetverblijfplaatshistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VerblijfplaatshistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<VerblijfplaatshistorieHalCollectie>> GetverblijfplaatshistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VerblijfstitelhistorieHalCollectie</returns>
        System.Threading.Tasks.Task<VerblijfstitelhistorieHalCollectie> GetverblijfstitelhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VerblijfstitelhistorieHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<VerblijfstitelhistorieHalCollectie>> GetverblijfstitelhistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class BRPHistorieBevragenApi : IBRPHistorieBevragenApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="BRPHistorieBevragenApi"/> class.
        /// </summary>
        /// <returns></returns>
        public BRPHistorieBevragenApi(String basePath)
        {
            this.Configuration = new Org.OpenAPITools.Client.Configuration { BasePath = basePath };

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BRPHistorieBevragenApi"/> class
        /// </summary>
        /// <returns></returns>
        public BRPHistorieBevragenApi()
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.Default;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BRPHistorieBevragenApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public BRPHistorieBevragenApi(Org.OpenAPITools.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Org.OpenAPITools.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        ///  Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>NationaliteithistorieHalCollectie</returns>
        public NationaliteithistorieHalCollectie Getnationaliteithistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
             ApiResponse<NationaliteithistorieHalCollectie> localVarResponse = GetnationaliteithistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of NationaliteithistorieHalCollectie</returns>
        public ApiResponse<NationaliteithistorieHalCollectie> GetnationaliteithistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getnationaliteithistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/nationaliteithistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getnationaliteithistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<NationaliteithistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (NationaliteithistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(NationaliteithistorieHalCollectie)));
        }

        /// <summary>
        ///  Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of NationaliteithistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<NationaliteithistorieHalCollectie> GetnationaliteithistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<NationaliteithistorieHalCollectie> localVarResponse = await GetnationaliteithistorieWithHttpInfoAsync(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Zoek de nationaliteithistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle nationaliteiten van de persoon terug. De meest actuele nationaliteit staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (NationaliteithistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<NationaliteithistorieHalCollectie>> GetnationaliteithistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getnationaliteithistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/nationaliteithistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getnationaliteithistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<NationaliteithistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (NationaliteithistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(NationaliteithistorieHalCollectie)));
        }

        /// <summary>
        ///  Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>PartnerhistorieHalCollectie</returns>
        public PartnerhistorieHalCollectie Getpartnerhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
             ApiResponse<PartnerhistorieHalCollectie> localVarResponse = GetpartnerhistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of PartnerhistorieHalCollectie</returns>
        public ApiResponse<PartnerhistorieHalCollectie> GetpartnerhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getpartnerhistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/partnerhistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getpartnerhistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<PartnerhistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (PartnerhistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(PartnerhistorieHalCollectie)));
        }

        /// <summary>
        ///  Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of PartnerhistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<PartnerhistorieHalCollectie> GetpartnerhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<PartnerhistorieHalCollectie> localVarResponse = await GetpartnerhistorieWithHttpInfoAsync(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Zoek de partnerhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle partners terug waarmee een partnerschap is aangegaan of een huwelijk is gesloten. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (PartnerhistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<PartnerhistorieHalCollectie>> GetpartnerhistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getpartnerhistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/partnerhistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getpartnerhistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<PartnerhistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (PartnerhistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(PartnerhistorieHalCollectie)));
        }

        /// <summary>
        ///  Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfplaatshistorieHalCollectie</returns>
        public VerblijfplaatshistorieHalCollectie Getverblijfplaatshistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
             ApiResponse<VerblijfplaatshistorieHalCollectie> localVarResponse = GetverblijfplaatshistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfplaatshistorieHalCollectie</returns>
        public ApiResponse<VerblijfplaatshistorieHalCollectie> GetverblijfplaatshistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getverblijfplaatshistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/verblijfplaatshistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getverblijfplaatshistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VerblijfplaatshistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VerblijfplaatshistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VerblijfplaatshistorieHalCollectie)));
        }

        /// <summary>
        ///  Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VerblijfplaatshistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<VerblijfplaatshistorieHalCollectie> GetverblijfplaatshistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<VerblijfplaatshistorieHalCollectie> localVarResponse = await GetverblijfplaatshistorieWithHttpInfoAsync(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Zoek de verblijfplaatshistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfplaatsen terug. Het meest actuele adres staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VerblijfplaatshistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<VerblijfplaatshistorieHalCollectie>> GetverblijfplaatshistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getverblijfplaatshistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/verblijfplaatshistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getverblijfplaatshistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VerblijfplaatshistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VerblijfplaatshistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VerblijfplaatshistorieHalCollectie)));
        }

        /// <summary>
        ///  Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>VerblijfstitelhistorieHalCollectie</returns>
        public VerblijfstitelhistorieHalCollectie Getverblijfstitelhistorie (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
             ApiResponse<VerblijfstitelhistorieHalCollectie> localVarResponse = GetverblijfstitelhistorieWithHttpInfo(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet);
             return localVarResponse.Data;
        }

        /// <summary>
        ///  Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <returns>ApiResponse of VerblijfstitelhistorieHalCollectie</returns>
        public ApiResponse<VerblijfstitelhistorieHalCollectie> GetverblijfstitelhistorieWithHttpInfo (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getverblijfstitelhistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/verblijfstitelhistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getverblijfstitelhistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VerblijfstitelhistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VerblijfstitelhistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VerblijfstitelhistorieHalCollectie)));
        }

        /// <summary>
        ///  Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of VerblijfstitelhistorieHalCollectie</returns>
        public async System.Threading.Tasks.Task<VerblijfstitelhistorieHalCollectie> GetverblijfstitelhistorieAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
             ApiResponse<VerblijfstitelhistorieHalCollectie> localVarResponse = await GetverblijfstitelhistorieWithHttpInfoAsync(burgerservicenummer, fields, peildatum, datumVan, datumTotEnMet, cancellationToken);
             return localVarResponse.Data;

        }

        /// <summary>
        ///  Zoek de verblijfstitelhistorie van een persoon op de opgegeven peildatum of binnen de opgegeven periode. Als je geen peildatum of periode opgeeft, krijg je alle verblijfstitels van de persoon terug. De meest actuele verblijfstitel staat bovenaan. 
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="burgerservicenummer">Uniek persoonsnummer </param>
        /// <param name="fields">Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#39;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.2.0/features/fields.feature) (optional)</param>
        /// <param name="peildatum">De datum waarop de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumVan">De begindatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="datumTotEnMet">De einddatum van de periode waarover de resource wordt opgevraagd. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
        /// <returns>Task of ApiResponse (VerblijfstitelhistorieHalCollectie)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<VerblijfstitelhistorieHalCollectie>> GetverblijfstitelhistorieWithHttpInfoAsync (string burgerservicenummer, string fields = default(string), DateTime? peildatum = default(DateTime?), DateTime? datumVan = default(DateTime?), DateTime? datumTotEnMet = default(DateTime?), CancellationToken cancellationToken = default(CancellationToken))
        {
            // verify the required parameter 'burgerservicenummer' is set
            if (burgerservicenummer == null)
                throw new ApiException(400, "Missing required parameter 'burgerservicenummer' when calling BRPHistorieBevragenApi->Getverblijfstitelhistorie");

            var localVarPath = "/ingeschrevenpersonen/{burgerservicenummer}/verblijfstitelhistorie";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (burgerservicenummer != null) localVarPathParams.Add("burgerservicenummer", this.Configuration.ApiClient.ParameterToString(burgerservicenummer)); // path parameter
            if (fields != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "fields", fields)); // query parameter
            if (peildatum != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "peildatum", peildatum)); // query parameter
            if (datumVan != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumVan", datumVan)); // query parameter
            if (datumTotEnMet != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "datumTotEnMet", datumTotEnMet)); // query parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType, cancellationToken);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Getverblijfstitelhistorie", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<VerblijfstitelhistorieHalCollectie>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => string.Join(",", x.Value)),
                (VerblijfstitelhistorieHalCollectie) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(VerblijfstitelhistorieHalCollectie)));
        }

    }
}
